// Code generated by MockGen. DO NOT EDIT.
// Source: internal/storage/storage.go

// Package mock is a generated GoMock package.
package mock

import (
	context "context"
	reflect "reflect"

	storage "github.com/SamMeown/metrix/internal/storage"
	gomock "github.com/golang/mock/gomock"
)

// MockMetricsStorageGetter is a mock of MetricsStorageGetter interface.
type MockMetricsStorageGetter struct {
	ctrl     *gomock.Controller
	recorder *MockMetricsStorageGetterMockRecorder
}

// MockMetricsStorageGetterMockRecorder is the mock recorder for MockMetricsStorageGetter.
type MockMetricsStorageGetterMockRecorder struct {
	mock *MockMetricsStorageGetter
}

// NewMockMetricsStorageGetter creates a new mock instance.
func NewMockMetricsStorageGetter(ctrl *gomock.Controller) *MockMetricsStorageGetter {
	mock := &MockMetricsStorageGetter{ctrl: ctrl}
	mock.recorder = &MockMetricsStorageGetterMockRecorder{mock}
	return mock
}

// EXPECT returns an object that allows the caller to indicate expected use.
func (m *MockMetricsStorageGetter) EXPECT() *MockMetricsStorageGetterMockRecorder {
	return m.recorder
}

// GetAll mocks base method.
func (m *MockMetricsStorageGetter) GetAll(ctx context.Context) (storage.MetricsStorageItems, error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "GetAll", ctx)
	ret0, _ := ret[0].(storage.MetricsStorageItems)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// GetAll indicates an expected call of GetAll.
func (mr *MockMetricsStorageGetterMockRecorder) GetAll(ctx interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "GetAll", reflect.TypeOf((*MockMetricsStorageGetter)(nil).GetAll), ctx)
}

// GetCounter mocks base method.
func (m *MockMetricsStorageGetter) GetCounter(ctx context.Context, name string) (*int64, error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "GetCounter", ctx, name)
	ret0, _ := ret[0].(*int64)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// GetCounter indicates an expected call of GetCounter.
func (mr *MockMetricsStorageGetterMockRecorder) GetCounter(ctx, name interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "GetCounter", reflect.TypeOf((*MockMetricsStorageGetter)(nil).GetCounter), ctx, name)
}

// GetGauge mocks base method.
func (m *MockMetricsStorageGetter) GetGauge(ctx context.Context, name string) (*float64, error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "GetGauge", ctx, name)
	ret0, _ := ret[0].(*float64)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// GetGauge indicates an expected call of GetGauge.
func (mr *MockMetricsStorageGetterMockRecorder) GetGauge(ctx, name interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "GetGauge", reflect.TypeOf((*MockMetricsStorageGetter)(nil).GetGauge), ctx, name)
}

// GetMany mocks base method.
func (m *MockMetricsStorageGetter) GetMany(ctx context.Context, names storage.MetricsStorageKeys) (storage.MetricsStorageItems, error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "GetMany", ctx, names)
	ret0, _ := ret[0].(storage.MetricsStorageItems)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// GetMany indicates an expected call of GetMany.
func (mr *MockMetricsStorageGetterMockRecorder) GetMany(ctx, names interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "GetMany", reflect.TypeOf((*MockMetricsStorageGetter)(nil).GetMany), ctx, names)
}

// MockMetricsStorageSetter is a mock of MetricsStorageSetter interface.
type MockMetricsStorageSetter struct {
	ctrl     *gomock.Controller
	recorder *MockMetricsStorageSetterMockRecorder
}

// MockMetricsStorageSetterMockRecorder is the mock recorder for MockMetricsStorageSetter.
type MockMetricsStorageSetterMockRecorder struct {
	mock *MockMetricsStorageSetter
}

// NewMockMetricsStorageSetter creates a new mock instance.
func NewMockMetricsStorageSetter(ctrl *gomock.Controller) *MockMetricsStorageSetter {
	mock := &MockMetricsStorageSetter{ctrl: ctrl}
	mock.recorder = &MockMetricsStorageSetterMockRecorder{mock}
	return mock
}

// EXPECT returns an object that allows the caller to indicate expected use.
func (m *MockMetricsStorageSetter) EXPECT() *MockMetricsStorageSetterMockRecorder {
	return m.recorder
}

// SetCounter mocks base method.
func (m *MockMetricsStorageSetter) SetCounter(ctx context.Context, name string, value int64) error {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "SetCounter", ctx, name, value)
	ret0, _ := ret[0].(error)
	return ret0
}

// SetCounter indicates an expected call of SetCounter.
func (mr *MockMetricsStorageSetterMockRecorder) SetCounter(ctx, name, value interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "SetCounter", reflect.TypeOf((*MockMetricsStorageSetter)(nil).SetCounter), ctx, name, value)
}

// SetGauge mocks base method.
func (m *MockMetricsStorageSetter) SetGauge(ctx context.Context, name string, value float64) error {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "SetGauge", ctx, name, value)
	ret0, _ := ret[0].(error)
	return ret0
}

// SetGauge indicates an expected call of SetGauge.
func (mr *MockMetricsStorageSetterMockRecorder) SetGauge(ctx, name, value interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "SetGauge", reflect.TypeOf((*MockMetricsStorageSetter)(nil).SetGauge), ctx, name, value)
}

// SetMany mocks base method.
func (m *MockMetricsStorageSetter) SetMany(ctx context.Context, items storage.MetricsStorageItems) error {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "SetMany", ctx, items)
	ret0, _ := ret[0].(error)
	return ret0
}

// SetMany indicates an expected call of SetMany.
func (mr *MockMetricsStorageSetterMockRecorder) SetMany(ctx, items interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "SetMany", reflect.TypeOf((*MockMetricsStorageSetter)(nil).SetMany), ctx, items)
}

// MockMetricsStorage is a mock of MetricsStorage interface.
type MockMetricsStorage struct {
	ctrl     *gomock.Controller
	recorder *MockMetricsStorageMockRecorder
}

// MockMetricsStorageMockRecorder is the mock recorder for MockMetricsStorage.
type MockMetricsStorageMockRecorder struct {
	mock *MockMetricsStorage
}

// NewMockMetricsStorage creates a new mock instance.
func NewMockMetricsStorage(ctrl *gomock.Controller) *MockMetricsStorage {
	mock := &MockMetricsStorage{ctrl: ctrl}
	mock.recorder = &MockMetricsStorageMockRecorder{mock}
	return mock
}

// EXPECT returns an object that allows the caller to indicate expected use.
func (m *MockMetricsStorage) EXPECT() *MockMetricsStorageMockRecorder {
	return m.recorder
}

// GetAll mocks base method.
func (m *MockMetricsStorage) GetAll(ctx context.Context) (storage.MetricsStorageItems, error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "GetAll", ctx)
	ret0, _ := ret[0].(storage.MetricsStorageItems)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// GetAll indicates an expected call of GetAll.
func (mr *MockMetricsStorageMockRecorder) GetAll(ctx interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "GetAll", reflect.TypeOf((*MockMetricsStorage)(nil).GetAll), ctx)
}

// GetCounter mocks base method.
func (m *MockMetricsStorage) GetCounter(ctx context.Context, name string) (*int64, error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "GetCounter", ctx, name)
	ret0, _ := ret[0].(*int64)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// GetCounter indicates an expected call of GetCounter.
func (mr *MockMetricsStorageMockRecorder) GetCounter(ctx, name interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "GetCounter", reflect.TypeOf((*MockMetricsStorage)(nil).GetCounter), ctx, name)
}

// GetGauge mocks base method.
func (m *MockMetricsStorage) GetGauge(ctx context.Context, name string) (*float64, error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "GetGauge", ctx, name)
	ret0, _ := ret[0].(*float64)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// GetGauge indicates an expected call of GetGauge.
func (mr *MockMetricsStorageMockRecorder) GetGauge(ctx, name interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "GetGauge", reflect.TypeOf((*MockMetricsStorage)(nil).GetGauge), ctx, name)
}

// GetMany mocks base method.
func (m *MockMetricsStorage) GetMany(ctx context.Context, names storage.MetricsStorageKeys) (storage.MetricsStorageItems, error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "GetMany", ctx, names)
	ret0, _ := ret[0].(storage.MetricsStorageItems)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// GetMany indicates an expected call of GetMany.
func (mr *MockMetricsStorageMockRecorder) GetMany(ctx, names interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "GetMany", reflect.TypeOf((*MockMetricsStorage)(nil).GetMany), ctx, names)
}

// Ping mocks base method.
func (m *MockMetricsStorage) Ping(ctx context.Context) error {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "Ping", ctx)
	ret0, _ := ret[0].(error)
	return ret0
}

// Ping indicates an expected call of Ping.
func (mr *MockMetricsStorageMockRecorder) Ping(ctx interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "Ping", reflect.TypeOf((*MockMetricsStorage)(nil).Ping), ctx)
}

// SetCounter mocks base method.
func (m *MockMetricsStorage) SetCounter(ctx context.Context, name string, value int64) error {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "SetCounter", ctx, name, value)
	ret0, _ := ret[0].(error)
	return ret0
}

// SetCounter indicates an expected call of SetCounter.
func (mr *MockMetricsStorageMockRecorder) SetCounter(ctx, name, value interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "SetCounter", reflect.TypeOf((*MockMetricsStorage)(nil).SetCounter), ctx, name, value)
}

// SetGauge mocks base method.
func (m *MockMetricsStorage) SetGauge(ctx context.Context, name string, value float64) error {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "SetGauge", ctx, name, value)
	ret0, _ := ret[0].(error)
	return ret0
}

// SetGauge indicates an expected call of SetGauge.
func (mr *MockMetricsStorageMockRecorder) SetGauge(ctx, name, value interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "SetGauge", reflect.TypeOf((*MockMetricsStorage)(nil).SetGauge), ctx, name, value)
}

// SetMany mocks base method.
func (m *MockMetricsStorage) SetMany(ctx context.Context, items storage.MetricsStorageItems) error {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "SetMany", ctx, items)
	ret0, _ := ret[0].(error)
	return ret0
}

// SetMany indicates an expected call of SetMany.
func (mr *MockMetricsStorageMockRecorder) SetMany(ctx, items interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "SetMany", reflect.TypeOf((*MockMetricsStorage)(nil).SetMany), ctx, items)
}
